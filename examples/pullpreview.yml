name: PullPreview

on:
  pull_request:
    types: [ labeled, unlabeled, synchronize, closed, reopened ]

jobs:
  # Optional, provide files as an artifact.
  # https://docs.github.com/en/actions/using-workflows/storing-workflow-data-as-artifacts
  upload-artifact:
    if: ${{ contains(github.event.pull_request.labels.*.name, 'pullpreview') || github.event.action == 'unlabeled' || github.event.action == 'closed' }}
    runs-on: ubuntu-latest
    steps:
    - name: Checkout file.
      if: ${{ contains(github.event.pull_request.labels.*.name, 'pullpreview') && github.event.action != 'unlabeled' && github.event.action != 'closed' }}
      # https://github.com/actions/checkout
      uses: actions/checkout@v4
      with:
        sparse-checkout: |
          storage/app/existingFile.txt
        # https://git-scm.com/docs/git-sparse-checkout#_internalscone_mode_handling
        sparse-checkout-cone-mode: false

    - name: Create file.
      if: ${{ contains(github.event.pull_request.labels.*.name, 'pullpreview') && github.event.action != 'unlabeled' && github.event.action != 'closed' }}
      run: echo "Hello World" > helloWorld.txt

    - name: Upload file as artifact.
      if: ${{ contains(github.event.pull_request.labels.*.name, 'pullpreview') && github.event.action != 'unlabeled' && github.event.action != 'closed' }}
      # https://github.com/actions/upload-artifact
      uses: actions/upload-artifact@v4
      with:
        name: hello-world
        path: |
          storage/app/existingFile.txt
          helloWorld.txt

  deploy-staging-environment:
    needs: upload-artifact
    permissions:
      contents: read # to fetch code (actions/checkout)
      deployments: write # to delete deployments
      pull-requests: write # to remove labels
      statuses: write # to create commit status

    name: Deploy PullPreview staging environment
    # https://github.com/cybex-gmbh/github-workflows/blob/main/.github/workflows/pullpreview.yml
    uses: cybex-gmbh/github-workflows/.github/workflows/pullpreview.yml@main
    with:
      PULLPREVIEW_ADMINS: jheusinger, gael-connan-cybex, holyfabi, lupinitylabs, mszulik
#      INSTANCE_TYPE: large
#      DOMAIN: example.com
#      MAX_DOMAIN_LENGTH: 30
#      SHUTDOWN_AFTER: "2d"
      ARTIFACT_NAME: hello-world
    secrets:
      # If you need to access private Docker repositories.
#      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
#      DOCKERHUB_TOKEN_READONLY: ${{ secrets.DOCKERHUB_TOKEN_READONLY }}
      # If you need a custom .env file name.
#      ENV_BASE_FILE_NAME: .env.production
#      ENV_FILE_NAME: .env.production
      ENV_VARS: |
        A_DOTENV_VARIABLE="${{ secrets.A_REPOSITORY_SECRET }}"
        ANOTHER_DOTENV_VARIABLE="${{ secrets.AN_ORGANIZATION_SECRET }}"
      PULLPREVIEW_BASIC_AUTH: ${{ secrets.PULLPREVIEW_BASIC_AUTH }}
      PULLPREVIEW_AWS_ACCESS_KEY_ID: ${{ secrets.PULLPREVIEW_AWS_ACCESS_KEY_ID }}
      PULLPREVIEW_AWS_SECRET_ACCESS_KEY: ${{ secrets.PULLPREVIEW_AWS_SECRET_ACCESS_KEY }}

