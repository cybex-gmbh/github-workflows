name: Setup environment and execute tests for a Laravel project

on:
  workflow_call:
    inputs:
      DATABASE_IMAGE:
        description: The Docker image to use for the database.
        required: false
        type: string
        default: mysql:8.0
      DATABASE_NAME:
        description: The name of the database.
        required: true
        type: string
      DATABASE_PORT:
        description: The port of the database.
        required: false
        type: string
        default: '3306'
      DATABASE_CONNECTION:
        description: The database connection to use.
        required: false
        type: string
        default: mysql
      DATABASE_HOST:
        description: The host of the database.
        required: false
        type: string
        default: 127.0.0.1
      DATABASE_USERNAME:
        description: The username to use for the database.
        required: false
        type: string
        default: root
      DATABASE_OPTIONS:
        description: The options to use for the database, such as health check.
        required: false
        type: string
        default: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
      DATABASE_CLIENT_VERSION:
        description: The database client version to use. Currently only applies to PostgreSQL and has to be the same as or higher than the database image version.
        required: false
        type: string
      PHP_VERSION:
        description: The PHP version to execute the tests for.
        required: true
        type: string
      LARAVEL_VERSION:
        description: The Laravel version to execute the tests for.
        required: true
        type: string
      DEPENDENCY_VERSION:
        description: The dependency version to execute the tests for.
        required: true
        type: string
      TEST_COMMANDS:
        description: The commands which execute the tests.
        required: false
        type: string
        default: |
          php artisan migrate:fresh --env=ci
          php artisan test --env=ci --no-coverage
      LINUX_PACKAGES:
        description: A comma separated list of linux packages which should be installed.
        required: false
        type: string

jobs:
  execute-tests:
    runs-on: ubuntu-latest
    services:
      database:
        image: ${{ inputs.DATABASE_IMAGE }}
        env:
          # MySQL
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: ${{ inputs.DATABASE_NAME }}
          # PostgreSQL
          POSTGRES_HOST_AUTH_METHOD: trust
          POSTGRES_DB: ${{ inputs.DATABASE_NAME }}
        ports:
          - ${{ inputs.DATABASE_PORT }}
        options: ${{ inputs.DATABASE_OPTIONS }}

    name: PHP ${{ inputs.PHP_VERSION }} with Laravel ${{ inputs.LARAVEL_VERSION }} (${{ inputs.DEPENDENCY_VERSION }})
    steps:
      - name: Checkout code
        # https://github.com/actions/checkout
        uses: actions/checkout@v4

      - name: Setup PHP
        # https://github.com/shivammathur/setup-php
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ inputs.PHP_VERSION }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, gd, imagick
          tools: composer:v2
          coverage: none

      - name: Install additional packages
        if: ${{ inputs.LINUX_PACKAGES != '' }}
        # https://github.com/awalsh128/cache-apt-pkgs-action
        uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: ${{ inputs.LINUX_PACKAGES }}
          version: ${{ inputs.PHP_VERSION }}

      # The GitHub runner PostgreSQL version is outdated, and will not work with databases using the latest PostgreSQL version.
      - name: Update PostgreSQL
        if: ${{ contains(inputs.DATABASE_IMAGE, 'postgres') }}
        uses: tj-actions/install-postgresql@v3
        with:
          postgresql-version: ${{ inputs.DATABASE_CLIENT_VERSION }}

      - name: Get composer cache directory
        id: get-cache-dir
        run: echo "directory=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache composer dependencies
        # https://github.com/actions/cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.get-cache-dir.outputs.directory }}
          key: dependencies-laravel-${{ inputs.LARAVEL_VERSION }}-php-${{ inputs.PHP_VERSION }}-composer-${{ hashFiles('composer.json') }}
          restore-keys: dependencies-laravel-${{ inputs.LARAVEL_VERSION }}-php-${{ inputs.PHP_VERSION }}-composer-

      - name: Install dependencies
        run: |
          composer require "laravel/framework:${{ inputs.LARAVEL_VERSION }}" --no-interaction --no-update --dev --no-progress
          composer update --${{ inputs.DEPENDENCY_VERSION }} --prefer-dist --no-interaction --no-progress

      - name: Execute tests
        run: ${{ inputs.TEST_COMMANDS }}
        env:
          DB_PORT: ${{ job.services.database.ports[inputs.DATABASE_PORT] }}
          DB_CONNECTION: ${{ inputs.DATABASE_CONNECTION }}
          DB_HOST: ${{ inputs.DATABASE_HOST }}
          DB_DATABASE: ${{ inputs.DATABASE_NAME }}
          DB_USERNAME: ${{ inputs.DATABASE_USERNAME }}
